// <auto-generated />
using System;
using CanaRails.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(CanaRailsContext))]
    [Migration("20240510134128_DefaultEntry")]
    partial class DefaultEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("CanaRails.Database.Entities.App", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.AppMatcher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AppID");

                    b.ToTable("AppMatchers");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Container", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContainerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EntryID");

                    b.HasIndex("ImageID");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Entry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Default")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AppID");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.EntryMatcher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EntryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("EntryID");

                    b.ToTable("EntryMatchers");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Registry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AppID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.AppMatcher", b =>
                {
                    b.HasOne("CanaRails.Database.Entities.App", "App")
                        .WithMany("AppMatchers")
                        .HasForeignKey("AppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Container", b =>
                {
                    b.HasOne("CanaRails.Database.Entities.Entry", "Entry")
                        .WithMany("Containers")
                        .HasForeignKey("EntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CanaRails.Database.Entities.Image", "Image")
                        .WithMany("Containers")
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Entry", b =>
                {
                    b.HasOne("CanaRails.Database.Entities.App", "App")
                        .WithMany("Entries")
                        .HasForeignKey("AppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.EntryMatcher", b =>
                {
                    b.HasOne("CanaRails.Database.Entities.Entry", "Entry")
                        .WithMany("EntryMatchers")
                        .HasForeignKey("EntryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Image", b =>
                {
                    b.HasOne("CanaRails.Database.Entities.App", "App")
                        .WithMany("Images")
                        .HasForeignKey("AppID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.App", b =>
                {
                    b.Navigation("AppMatchers");

                    b.Navigation("Entries");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Entry", b =>
                {
                    b.Navigation("Containers");

                    b.Navigation("EntryMatchers");
                });

            modelBuilder.Entity("CanaRails.Database.Entities.Image", b =>
                {
                    b.Navigation("Containers");
                });
#pragma warning restore 612, 618
        }
    }
}
